
* application 기본 객체

- 특정 웹 어플리케이션에 포함된 모든 JSP페이지는 하나의 application 기본 객체를 공유합니다.
- application 객체는 웹 어플리케이션 전반에 걸쳐서 사용되는 정보를 담고 있습니다.
- request 객체는 요청영역마다 생성되고, session 객체는 브라우저별로 생성되고, application은 프로그램 전체에서 딱 한번 최초 가동시 생성됩니다.

<브라우저 단위로 저장하는게 아니라 서버에 저장하는 세션>

request -> 요청 즉시 생성되었다 삭제
cookie -> 요청이 들어오면 쿠키 지속시간만큼 유지되다 삭제
session -> 브라우저가 꺼지기 전까지 유지
application -> 서버가 꺼지기 전까지 유지








* 예외 페이지

- 예외 상황이 발생했을 경우 웹 컨테이너(톰캣)에서 제공되는 기본적인 예외페이지가 보여집니다.

- 개발 과정에서는 이러한 예외 페이지를 보고 어떤 에러가 발생했는지 알 수 있기 때문에 오류를 수정하는 데 도움이 됩니다.

- 그러나 사용자에게 상용 서비스를 제공하고 있는데 이러한 딱딱한 페이지가 보여진다면 사용자로 하여금 불쾌감을 일으키고, 해당 사이트에 대한 신뢰도가 하락하게 됩니다.

- 또한 코드의 일부가 노출되어 보안 측면에도 좋지 않습니다.

- 그래서 개발자가 따로 만들어 둔 에러 페이지로 유도하여 사용자에게 친숙한 페이지를 보여줍니다.

* HTTP 주요 응답 상태 코드

1. 404: 요청한 URL을 찾을 수 없는 경우.
2. 500: 서버측 내부 오류로 인해 페이지가 나타나지 않는 경우(java, JSP 페이지 내의 코드오류)

3. 200: 요청을 성공적으로 처리함.
4. 307: 임시로 페이지를 리다이렉트함.
5. 400: 클라이언트의 요청이 잘못된 구문으로 작성됨.
6. 405: 요청 방식을 허용하지 않음(GET, POST 등)
7. 503: 서버가 일시적으로 서비스를 제공할 수 없음(일시적 서버과부하, 서버 임시 보수 등)





* JSP에서 에러를 처리하는 방법

1. 직접 예외를 처리하기
- 자바의 키워드인 try ~ catch를 사용하여 직접 개발자가 예외를 처리합니다.






2. 에러를 처리할 페이지를 따로 지정하기

- JSP는 실행 도중 예외가 발생할 때 톰캣 기본 에러화면 대신 개발자가 지정한 JSP페이지를 보여줄 수 있는 기능을 제공하고 있습니다.
- 에러가 발생하면 보여줄 JSP페이지는 페이지 지시자(directive)의 errorPage 속성을 사용하여 지정합니다.
- 예외가 발생할 것으로 예상되는 페이지에 예외가 발생했을 때 보여줄 페이지를 지정합니다.
ex) <%@ page errorPage="예외가 발생했을 시 보여줄 페이지" %>


- 에러 발생시 유도된 페이지에는 페이지 지시자태그로 isErrorPage 속성을 사용하여 true로 값을 설정합니다.
ex) <%@ page isErrorPage="true" %>

- 에러 페이지로 지정된 JSP파일 내에서는 예외를 처리해주는 exception 내장객체를 사용할 수 있습니다.

- 인터넷 익스플로러 브라우저의 경우 전체 응답 결과의 데이터가 512바이트보다 작을 경우 마이크로소프트에서 자체 제공하는 에러페이지를 출력합니다.











3. 응답 상태 코드별로 에러 페이지 지정하기

- JSP는 에러 코드별로 사용할 에러 페이지를 web.xml파일 수정을 통해 지정할 수 있습니다.
- 이렇게 지정한 에러페이지는 일반 JSP파일과 동일하게 작성하면 됩니다.

ex)
  <error-page>
  	<error-code>404</error-code>
  	<location>/폴더명/error_404.jsp</location>
  </error-page>
  <error-page>
  	<error-code>500</error-code>
  	<location>/폴더명/error_500.jsp</location>
  </error-page>
  <error-page>
  	<exception-type>java.lang.NullPointerException</exception-type>
  	<location>/폴더명/error_null.jsp</location>
  </error-page>






4. 예외 타입별로 에러 페이지 지정하기

- 발생하는 예외의 종류별로도 에러 페이지를 지정할 수 있습니다. web.xml파일을 수정합니다.



* 에러 페이지의 우선순위

- 에러 페이지를 여러 방법으로 지정한 경우 다음의 우선순위에 따라 사용할 에러 페이지를 선택합니다.

1. 페이지 지시자 태그의 errorPage속성에 지정한 페이지.
2. web.xml에 지정한 에러 타입에 따른 페이지.
3. web.xml에 지정한 응답 상태 코드에 따른 페이지.
4. 위 3항목에 해당하지 않을 경우 톰캣이 제공하는 에러 페이지.







