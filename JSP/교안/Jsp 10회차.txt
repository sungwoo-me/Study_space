
* 데이터 베이스(DataBase)

- 수 많은 데이터들을 관리하기 위한 수단으로 데이터베이스가 사용됩니다.
- 데이터베이스는 데이터의 추가, 삭제, 검색, 수정, 이동 등의 기능이 있습니다.
- 그리고 이 데이터베이스를 관리하는 도구가 DBMS(DataBase Management System)입니다.
- DBMS는 SQL언어와 데이터베이스를 연결해주는 도구입니다.
- DBMS의 종류는 매우 다양하며 그 중 가장 많이 사용되는 DBMS는 RDBMS(관계형 데이터베이스: Relational DBMS)입니다.
- 우리가 흔히 사용하는 오라클, MySQL, MS SQL 등이 대표적인 관계형 데이터베이스입니다.

* MySQL 설치

- www.mysql.com

- 관리자 계정 비밀번호: mysql

* SQL이란?

- Structured Query Language의 약자로서 데이터베이스로부터 데이터를 조회하고 삭제하는 등의 작업을 수행할 때 사용하는 언어입니다.

* 테이블과 레코드

- RDBMS에서 데이터를 저장하는 장소를 테이블이라고 합니다.
- 테이블을 데이터들을 저장하며 데이터들의 정보를 갖고 있습니다.
- 테이블의 구조와 관련된 정보를 테이블 스키마(Schema)라고 부릅니다.
- 테이블의 구조는 각각의 정보를 저장하는 컬럼(column)과 컬럼 타입 그리고 컬럼의 길이로 구성됩니다.
- 각 컬럼에 저장된 데이터 값을 레코드(record)라고 부릅니다.
- 레코드, 컬럼 그리고 테이블을 사용해서 데이터를 저장하고 조회하는 등의 작업을 수행하는 것을 데이터베이스 프로그래밍이라고 부릅니다.

* SQL 문법

- SQL문의 특징은 대/소문자를 구분하지 않습니다. 

# DDL(Data Definition Language)
 - CREATE : 테이블이나 인덱스, 뷰등 데이터베이스 객체를 생성
 - DROP : 생성된 데이터베이스 객체를 삭제
 - ALTER : 이미 생성된 데이터베이스 객체를 수정
 - TRANCATE : 테이블이나 클러스터의 데이터를 통째로 삭제

# DML(Data Manipulation Language)
 - SELECT : 테이블이나 뷰에 있는 데이터 조회
 - INSERT : 데이터를 신규로 생성
 - UPDATE : 이미 생성된 데이터를 수정
 - DELETE : 데이터를 삭제
 - COMMIT : 트랜잭션 처리, 변경된 데이터를 최종 적용
 - ROLLBACK : 트랜잭션 처리, 변경된 데이터를 적용하지 않고 이전으로 되돌림

# DCL(Data Control Language)
 - GRANT : 사용자에게 특정 권한을 부여
 - REVOKE : 사용자에게 부여된 권한을 회수

1. 데이터베이스 생성 

- create database [db이름] default character set utf8;

2. 사용자 계정 생성과 권한 부여

- 관리자 계정의 이름은 'root'입니다.

a. 사용자 계정 생성

- create user '[계정명]' identified by '[암호]';

b. 권한 부여

- grant [권한 목록] on [데이터베이스이름].[테이블명] to '[계정]'; 
- 데이터베이스이름.* 는 모든 테이블 접근을 허용한다.

c. 권한 삭제
- revoke all on [데이터베이스이름].[테이블명] from [user이름];

3. 테이블 생성 문법

- create table [테이블 이름] (
	[컬럼명1] [컬럼데이터 타입(byte)],
	[컬럼명2] [컬럼데이터 타입(byte)],
	....
);

- 테이블 생성시 필요한 SQL 데이터 타입

A. MYSQL 문법
- 문자형 컬럼일 경우 CHAR, VARCHAR
- 정수형 컬럼일 경우 INT
- 날짜형 컬럼일 경우 DATETIME

B. ORACLE 문법

- 문자형 컬럼일 경우 VARCHAR2
- 정수형 컬럼일 경우 NUMBER
- 날짜형 컬럼일 경우 DATE

- 주요 키(primary key)

a. 테이블에 있는 레코드를 조회할 때 특정 값을 이용해서 조회한다면 좀 더 빠르게 레코드를 검색할 수 있습니다.

b. 주요 키로 지정된 컬럼은 하나의 테이블에 저장된 모든 레코드가 중복된 값 없이 모두 다른 값을 갖는 레코드를 말합니다.

c. 주로 회원 아이디나 게시판 글 번호 등이 주요 키로 지정됩니다.


4. INSERT 문

- insert문은 데이터를 저장하는 용도의 쿼리문입니다.

- insert into [테이블명] ([컬럼1], [컬럼2], ... ) values ([값1], [값2], ... );

- 테이블명 뒤에 컬럼명을 명시하지 않으면 전체 컬럼에 대해 값을 지정해야 합니다. 

5. UPDATE 문

- update 쿼리는 데이터를 수정하는 용도입니다.

- update [테이블명] set [수정할 컬럼]=[수정할 값] where [조건];


6. DELETE 문

- delete 쿼리는 데이터를 삭제하는 용도입니다.

- delete from [테이블명] where [조건];



7. SELECT 문

- select 쿼리는 데이터베이스로부터 정보를 조회하는 문장입니다.

- select [컬럼1], [컬럼2], ... from [테이블명] where [조건];

- 모든 컬럼을 조회하고 싶으면 조회할 컬럼 이름에 * 를 써줍니다.
ex) select * from member;

- where절로 조건을 지정할 때 like를 사용하면 특정 문장을 포함하고 있는지 확인할 수 있습니다.

ex) select * from member where name like '홍%';

-> name 컬럼의 값이 '홍******'의 형태를 갖는지 확인

8. SELECT 문의 정렬

- 게시판이나 회원목록 등을 출력할 때 이름 순서나 아이디 오름차순 혹은 글 번호순으로 정렬하는 것이 일반적입니다.

- sql 쿼리문에서는 where 조건절 뒤에 order by절을 사용하여 데이터를 정렬합니다.

- 오름차순이면 asc, 내림차순이면 desc를 사용합니다.

9. DROP 문

- 테이블을 삭제할 수 있는 쿼리문입니다.
- drop table [테이블 이름];

10. commit

- 서버에 입력한 쿼리문들의 상태지점을 저장하는 용도.
- commit과 rollback은 DML문에서만 작동합니다.

11. rollback

- commit된 위치를 기준으로 commit 이후에 작성 쿼리문을 commit한 시점으로 되돌리는 문장.






 