package kr.co.ict;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class BoardDAO {
	// datetime에 대응하는것은
	// java.sql.Date 입니다. 
	// 변수 및 set, getter , to String 까지 


	private DataSource ds ; 

	
	private static BoardDAO dao = new BoardDAO();
	
	
	// 1. 생성자 private 처리해서 외부에서 생성명령을 내릴수 없게 처리한다. 
	private BoardDAO() {
		try {
			Context ct = new InitialContext();
			ds = (DataSource)ct.lookup("java:comp/env/jdbc/mysql");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// 2. static 키워드를 이용해서 한번만 생성하고 그 이후로는 
	// 주소를 공유하는 getInstance() 메서드를 생성 
	
	public static BoardDAO getInstance() {
		if(dao == null) {
			dao = new BoardDAO();
		} 
		return dao ; 
	}
	
	public List<BoardVO> getAllBoardList(){
		//  Connection, PreparedStatement, ResultSet 을 선언한다. 
		ResultSet rs =  null ;
		Connection con  = null;
		PreparedStatement pstmt  = null ;
		
		// ArrayList<UserVO> 자료형을 이용해 한줄 한줄 단위로 여러 row를 저장한다.  \
		
		List<BoardVO> boardList = new ArrayList<>();
		
		try {
			con = ds.getConnection();
			String sql = "SELECT * FROM boardTb1";
			pstmt = con.prepareStatement(sql);
			
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				int board_num = rs.getInt("board_num") ;
				String title = rs.getString("title");
				String content  = rs.getString("content");
				String writer = rs.getString("writer");
				Date bdate = rs.getDate("bdate");
				Date mdate = rs.getDate("mdate") ;
				int hit = rs.getInt("hit") ;

				BoardVO boardData = new BoardVO(board_num, title, content, writer ,bdate , mdate , hit);
				
				boardList.add(boardData);  
			}
			
		}catch(Exception e){
			e.printStackTrace();
			
		}finally {
			try {
				con.close();
				pstmt.close();
				rs.close();
			}catch(SQLException se) {
				se.printStackTrace();
			}
		}
		return boardList ;
	}
	
	
		
}
